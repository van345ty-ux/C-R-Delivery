{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-order-notification",
        "options": {}
      },
      "name": "Webhook (Recebe Pedido)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "whatsapp-order-notification"
    },
    {
      "parameters": {
        "conditions": [
          {
            "value1": "={{$json.workflow_type}}",
            "operation": "equal",
            "value2": "delivery_order"
          }
        ]
      },
      "name": "IF (Novo Pedido)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        480,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "const order = $json.message_data;\n\n// Verifica se 'items' existe antes de mapear\nconst itemsList = order.items && Array.isArray(order.items) \n  ? order.items.map(item => {\n      const obs = item.observations ? ` (Obs: ${item.observations})` : '';\n      return `* ${item.quantity}x ${item.name} - R$ ${(item.price * item.quantity).toFixed(2)}${obs}`;\n    }).join('\\n')\n  : '*Erro ao carregar itens do pedido*';\n\nconst deliveryInfo = order.delivery_type === 'delivery' \n  ? `\\nEndere√ßo: ${order.address}\\nTaxa de Entrega: R$ ${order.delivery_fee}`\n  : 'Retirada no Local (Sem taxa)';\n\nconst message = `*üéâ Pedido Recebido - C&R Sushi üéâ*\\n\\n*N√∫mero do Pedido:* ${order.order_number}\\n*Cliente:* ${order.customer_name}\\n*Telefone:* ${$json.phone_number}\\n\\n*Itens do Pedido:*\\n${itemsList}\\n\\n*Detalhes da Entrega:*\\n${deliveryInfo}\\n\\n*Pagamento:* ${order.payment_method.toUpperCase()}\\n*Total:* R$ ${order.total}\\n\\nSeu pedido est√° sendo processado. Acompanhe o status pelo link do app!`;\n\nreturn [\n  {\n    json: {\n      phoneNumber: $json.phone_number,\n      message: message,\n      orderNumber: order.order_number\n    }\n  }\n];"
      },
      "name": "Formatar Mensagem Novo Pedido",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        720,
        180
      ]
    },
    {
      "parameters": {
        "functionCode": "const data = $json.message_data;\nconst status = data.new_status;\nconst orderNumber = data.order_number;\nconst customerName = data.customer_name;\nconst deliveryType = data.delivery_type;\n\nlet statusMessage = '';\n\nswitch (status) {\n  case 'Pedido recebido':\n    statusMessage = `Seu pedido *${orderNumber}* foi recebido com sucesso! Estamos aguardando a confirma√ß√£o do pagamento e a aprova√ß√£o do administrador.`;\n    break;\n  case 'Em prepara√ß√£o':\n    statusMessage = `√ìtimas not√≠cias, ${customerName}! Seu pedido *${orderNumber}* est√° *em prepara√ß√£o*! Em breve estar√° pronto para ${deliveryType === 'delivery' ? 'entrega' : 'retirada'}.`;\n    break;\n  case 'Pronto para entrega':\n    statusMessage = `Seu pedido *${orderNumber}* est√° *pronto para entrega*! O entregador est√° a caminho.`;\n    break;\n  case 'Saiu para entrega':\n    statusMessage = `Seu pedido *${orderNumber}* *saiu para entrega*! Fique de olho, logo ele estar√° com voc√™.`;\n    break;\n  case 'Entregue':\n    statusMessage = `Seu pedido *${orderNumber}* foi *entregue* com sucesso! Esperamos que tenha gostado. Volte sempre!`;\n    break;\n  case 'Aguardando cliente retirar o pedido':\n    statusMessage = `Seu pedido *${orderNumber}* est√° *pronto para retirada* no local. Por favor, venha buscar o quanto antes!`;\n    break;\n  case 'Cliente j√° fez a retirada':\n    statusMessage = `Obrigado, ${customerName}! Seu pedido *${orderNumber}* foi *retirado*. Esperamos que tenha gostado!`;\n    break;\n  default:\n    statusMessage = `O status do seu pedido *${orderNumber}* foi atualizado para: *${status}*.`;\n}\n\nconst message = `*üç£ Atualiza√ß√£o de Status - C&R Sushi üç£*\\n\\n*Pedido:* ${orderNumber}\\n*Status:* ${status}\\n\\n${statusMessage}\\n\\nObrigado por escolher C&R Sushi!`;\n\nreturn [\n  {\n    json: {\n      phoneNumber: $json.phone_number, // N√∫mero do cliente\n      message: message,\n      orderNumber: orderNumber\n    }\n  }\n];"
      },
      "name": "Formatar Mensagem Status",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        720,
        420
      ]
    },
    {
      "parameters": {
        "url": "https://api.uazapi.com/send-message",
        "method": "POST",
        "sendOnlySet": true,
        "jsonBody": true,
        "bodyParameters": [
          {
            "name": "phone",
            "value": "={{$json.phoneNumber}}"
          },
          {
            "name": "message",
            "value": "={{$json.message}}"
          },
          {
            "name": "token",
            "value": "SEU_TOKEN_DA_UAZAPI_AQUI"
          }
        ],
        "options": {}
      },
      "name": "Enviar Mensagem (Uazapi)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        960,
        300
      ]
    },
    {
      "parameters": {
        "responseMode": "response",
        "responseData": "{\"success\": true, \"orderNumber\": \"={{$json.orderNumber}}\"}"
      },
      "name": "Responder Sucesso",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ]
    }
  ],
  "connections": {
    "Webhook (Recebe Pedido)": [
      [
        "IF (Novo Pedido)"
      ]
    ],
    "IF (Novo Pedido)": [
      [
        "Formatar Mensagem Novo Pedido"
      ],
      [
        "Formatar Mensagem Status"
      ]
    ],
    "Formatar Mensagem Novo Pedido": [
      [
        "Enviar Mensagem (Uazapi)"
      ]
    ],
    "Formatar Mensagem Status": [
      [
        "Enviar Mensagem (Uazapi)"
      ]
    ],
    "Enviar Mensagem (Uazapi)": [
      [
        "Responder Sucesso"
      ]
    ]
  }
}